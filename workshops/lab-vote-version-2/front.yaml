---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: result-ui
  name: result-ui
  namespace: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result-ui
  template:
    metadata:
      labels:
        app: result-ui
    spec:
      serviceAccountName: result-ui-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - image: mohamed1780/result-ui:v1
        name: result-ui
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        ports:
        - containerPort: 80
          name: result-ui
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        - mountPath: /var/cache/nginx
          name: nginx-cache
        - mountPath: /var/run
          name: nginx-run
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: result-ui
  name: result-ui
  namespace: vote
spec:
  type: LoadBalancer
  ports:
  - name: "result-ui-service"
    port: 80
    targetPort: 80
  selector:
    app: result-ui

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vote-ui
  name: vote-ui
  namespace: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote-ui
  template:
    metadata:
      labels:
        app: vote-ui
    spec:
      serviceAccountName: vote-ui-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - image: mohamed1780/vote-ui:v1
        name: vote-ui
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        ports:
        - containerPort: 80
          name: vote-ui
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        - mountPath: /var/cache/nginx
          name: nginx-cache
        - mountPath: /var/run
          name: nginx-run
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vote-ui
  name: vote-ui
  namespace: vote
spec:
  type: LoadBalancer
  ports:
  - name: "vote-ui-service"
    port: 80
    targetPort: 80
  selector:
    app: vote-ui