apiVersion: v1
kind: Namespace
metadata:
  name: petclinic
  labels:
    name: petclinic
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: petclinic
type: Opaque
data:
  mysql-root-password: Y2hhbmdlbWU=
  mysql-password: Y2hhbmdlbWU=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: petclinic
data:
  mysql-database: "petclinic"
  mysql-user: "petclinic"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: petclinic
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pdb-mysql
  namespace: petclinic
  labels:
    app: mysql
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: mysql
        image: mysql:8.4.6
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-password
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: mysql-database
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        resources:
          requests:
            memory: 1Gi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 500m
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: pdb-mysql
  namespace: petclinic
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mysql
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customers
  namespace: petclinic
  labels:
    app: petclinic
    tier: customers
spec:
  replicas: 2
  selector:
    matchLabels:
      app: petclinic
      tier: customers
  template:
    metadata:
      labels:
        app: petclinic
        tier: customers
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8082"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: app
        image: alexandreroman/spring-petclinic-k8s-customers:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8082
        env:
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://pdb-mysql:3306/petclinic"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: mysql-user
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        - name: SPRING_PROFILES_ACTIVE
          value: "mysql"
        - name: SERVER_PORT
          value: "8082"
        
        resources:
          requests:
            memory: 1Gi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 500m
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8082
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: customers
  namespace: petclinic
spec:
  ports:
  - port: 8082
    protocol: TCP
    targetPort: 8082
  selector:
    app: petclinic
    tier: customers
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vets
  namespace: petclinic
  labels:
    app: petclinic
    tier: vets
spec:
  replicas: 2
  selector:
    matchLabels:
      app: petclinic
      tier: vets
  template:
    metadata:
      labels:
        app: petclinic
        tier: vets
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8083"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: app
        image: alexandreroman/spring-petclinic-k8s-vets:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8083
        env:
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://pdb-mysql:3306/petclinic"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: mysql-user
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        - name: SPRING_PROFILES_ACTIVE
          value: "mysql"
        - name: SERVER_PORT
          value: "8083"
        
        resources:
          requests:
            memory: 1Gi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 500m
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8083
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8083
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: vets
  namespace: petclinic
spec:
  ports:
  - port: 8083
    protocol: TCP
    targetPort: 8083
  selector:
    app: petclinic
    tier: vets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: visits
  namespace: petclinic
  labels:
    app: petclinic
    tier: visits
spec:
  replicas: 2
  selector:
    matchLabels:
      app: petclinic
      tier: visits
  template:
    metadata:
      labels:
        app: petclinic
        tier: visits
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8084"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: app
        image: alexandreroman/spring-petclinic-k8s-visits:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8084
        env:
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://pdb-mysql:3306/petclinic"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: mysql-user
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        - name: SPRING_PROFILES_ACTIVE
          value: "mysql"
        - name: SERVER_PORT
          value: "8084"
       
        resources:
          requests:
            memory: 2Gi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 500m
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8084
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8084
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: visits
  namespace: petclinic
spec:
  ports:
  - port: 8084
    protocol: TCP
    targetPort: 8084
  selector:
    app: petclinic
    tier: visits
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: petclinic
  labels:
    app: petclinic
    tier: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: petclinic
      tier: api-gateway
  template:
    metadata:
      labels:
        app: petclinic
        tier: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: app
        image: alexandreroman/spring-petclinic-k8s-api-gateway:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
        env:
        - name: APP_CUSTOMERS_URI
          value: "http://customers:8082"
        - name: APP_VETS_URI
          value: "http://vets:8083"
        - name: APP_VISITS_URI
          value: "http://visits:8084"
        - name: SPRING_PROFILES_ACTIVE
          value: "mysql"
        - name: SERVER_PORT
          value: "8080"
        
        resources:
          requests:
            memory: 1Gi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 500m
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: petclinic
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: petclinic
    tier: api-gateway
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-lb
  namespace: petclinic
  annotations:
    cloud.google.com/load-balancer-type: "External"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: petclinic
    tier: api-gateway
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: petclinic-network-policy
  namespace: petclinic
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: petclinic
  - from: []
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8082
    - protocol: TCP
      port: 8083
    - protocol: TCP
      port: 8084
    - protocol: TCP
      port: 3306
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - podSelector:
        matchLabels:
          app: mysql
    ports:
    - protocol: TCP
      port: 3306
  - to:
    - podSelector:
        matchLabels:
          app: petclinic
    ports:
    - protocol: TCP
      port: 8082
    - protocol: TCP
      port: 8083
    - protocol: TCP
      port: 8084
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-gateway-pdb
  namespace: petclinic
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: petclinic
      tier: api-gateway
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: customers-pdb
  namespace: petclinic
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: petclinic
      tier: customers
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vets-pdb
  namespace: petclinic
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: petclinic
      tier: vets
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: visits-pdb
  namespace: petclinic
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: petclinic
      tier: visits
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: petclinic
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: petclinic-quota
  namespace: petclinic
spec:
  hard:
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    pods: "20"
    services: "10"
    persistentvolumeclaims: "5"