---
# Source: ghost-stack/charts/mysql/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: ghost-dev-mysql
  namespace: "ghost"
  labels:
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: ghost-dev
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mysql
      app.kubernetes.io/version: 8.0.36
      helm.sh/chart: mysql-9.23.0
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 3306
        - port: 3306
---
# Source: ghost-stack/charts/mysql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ghost-dev-mysql
  namespace: "ghost"
  labels:
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
automountServiceAccountToken: false
secrets:
  - name: ghost-dev-mysql
---
# Source: ghost-stack/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ghost-dev-mysql
  namespace: "ghost"
  labels:
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
type: Opaque
data:
  mysql-root-password: "Z2hvc3RfcGFzcw=="
  mysql-password: "Z2hvc3RfcGFzcw=="
---
# Source: ghost-stack/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ghost-dev-ghost-stack-ghost
  labels:
    app.kubernetes.io/name: ghost-stack
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: "ghost-stack-0.1.0"
type: Opaque
stringData:
  GHOST_USERNAME: "admin"
  GHOST_PASSWORD: "Admin1234567."
  GHOST_EMAIL: "admin@example.com"
---
# Source: ghost-stack/charts/mysql/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ghost-dev-mysql
  namespace: "ghost"
  labels:
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    port= 3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    slow_query_log=0
    long_query_time=10.0
    
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
---
# Source: ghost-stack/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ghost-dev-ghost-stack-config
  labels:
    app.kubernetes.io/name: ghost-stack
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: "ghost-stack-0.1.0"
data:
  BLOG_TITLE: "Ghost on GKE"
---
# Source: ghost-stack/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ghost-dev-ghost-stack-ghost-pvc
  labels:
    app.kubernetes.io/name: ghost-stack
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: "ghost-stack-0.1.0"
spec:
  accessModes: 
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: ghost-stack/charts/mysql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: ghost-dev-mysql-headless
  namespace: "ghost"
  labels:
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector:
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/name: mysql
    app.kubernetes.io/component: primary
---
# Source: ghost-stack/charts/mysql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: ghost-dev-mysql
  namespace: "ghost"
  labels:
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector:
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/name: mysql
    app.kubernetes.io/component: primary
---
# Source: ghost-stack/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ghost-dev-ghost-stack-ghost
  labels:
    app.kubernetes.io/name: ghost-stack
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: "ghost-stack-0.1.0"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 2368
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ghost-stack
    app.kubernetes.io/instance: ghost-dev
    tier: ghost
---
# Source: ghost-stack/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghost-dev-ghost-stack-ghost
  labels:
    app.kubernetes.io/name: ghost-stack
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: "ghost-stack-0.1.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ghost-stack
      app.kubernetes.io/instance: ghost-dev
      tier: ghost
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ghost-stack
        app.kubernetes.io/instance: ghost-dev
        tier: ghost
    spec:
      containers:
        - name: ghost
          image: "bitnami/ghost:5-debian-12"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 2368
          env:
            - name: url
              value: "http://localhost"
            - name: database__client
              value: "mysql"
            - name: database__connection__host
              value: "ghost-dev-ghost-stack-mysql"
            - name: database__connection__user
              value: "ghost_user"
            - name: database__password
              value: "ghost_pass"
            - name: database__connection__database
              value: "ghost_db"
            - name: GHOST_USERNAME
              valueFrom:
                secretKeyRef:
                  name: ghost-dev-ghost-stack-ghost
                  key: GHOST_USERNAME
            - name: GHOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghost-dev-ghost-stack-ghost
                  key: GHOST_PASSWORD
            - name: GHOST_EMAIL
              valueFrom:
                secretKeyRef:
                  name: ghost-dev-ghost-stack-ghost
                  key: GHOST_EMAIL
          volumeMounts:
            - name: ghost-content
              mountPath: /bitnami/ghost
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
      volumes:
        - name: ghost-content
          persistentVolumeClaim:
            claimName: ghost-dev-ghost-stack-ghost-pvc
---
# Source: ghost-stack/charts/mysql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ghost-dev-mysql
  namespace: "ghost"
  labels:
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  podManagementPolicy: ""
  selector:
    matchLabels:
      app.kubernetes.io/instance: ghost-dev
      app.kubernetes.io/name: mysql
      app.kubernetes.io/component: primary
  serviceName: ghost-dev-mysql
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: ed498982937ea530844b1a64aa2c812ccd503a6146d9153e3b11b89f19aa4f94
      labels:
        app.kubernetes.io/instance: ghost-dev
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mysql
        app.kubernetes.io/version: 8.0.36
        helm.sh/chart: mysql-9.23.0
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: ghost-dev-mysql
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: ghost-dev
                    app.kubernetes.io/name: mysql
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
      containers:
        - name: mysql
          image: bitnami/mysql:5.7.27
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghost-dev-mysql
                  key: mysql-root-password
            - name: MYSQL_USER
              value: "ghost_user"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghost-dev-mysql
                  key: mysql-password
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_DATABASE
              value: "ghost_db"
          envFrom:
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          startupProbe:
            failureThreshold: 10
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mysql/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mysql/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mysql/logs
              subPath: app-logs-dir
            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: ghost-dev-mysql
        - name: empty-dir
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/instance: ghost-dev
          app.kubernetes.io/name: mysql
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: ghost-stack/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "ghost-dev-ghost-stack-test-connection"
  labels:
    app.kubernetes.io/name: ghost-stack
    app.kubernetes.io/instance: ghost-dev
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: "ghost-stack-0.1.0"
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['ghost-dev-ghost-stack:80']
  restartPolicy: Never
